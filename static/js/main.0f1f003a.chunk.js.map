{"version":3,"sources":["components/Navbar.js","components/Textlabel.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","console","log","updateButtonColor","color","bgcolor","changeButtonColor","className","mode","href","title","type","id","style","backgroundColor","value","onClick","e","onChange","changeMode","htmlFor","Textlabel","useState","text","setText","heading","event","target","row","buttonColor","toUpperCase","length","setAlert","toLowerCase","string","split","filter","element","checkEmptyString","Alert","alert","role","word","lowercase","charAt","slice","captialiaze","message","App","setMode","setButtonColor","bgColor","setAAlert","setTimeout","document","body","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0f1f003a.chunk.js","sourcesContent":["import React from 'react'\nimport { Link } from 'react-router-dom'\n\n\nconst Navbar = (props) => {\n    console.log(props)\n\n    const updateButtonColor = (color, bgcolor) => {\n      props.changeButtonColor(color, bgcolor)\n    }\n\n    return(<>\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n  <div className=\"container-fluid\">\n    <a className=\"navbar-brand\" href=\"#\">{props.title}</a>\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"/navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n      <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n        <li className=\"nav-item\">\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">Home</a>\n        </li>\n        <li className=\"nav-item\">\n          <a className=\"nav-link active\" aria-current=\"page\" href=\"#\">About</a>\n        </li>\n    \n      </ul>\n      <ul className=\"navbar-nav me-auto mb-3 mb-lg-1\" >\n      <li className=\"nav-item my-70\">\n        <button className=\"btn btn-primary mx-2\" \n        style={{color: 'white', backgroundColor: 'green'}} \n        value='green' onClick={(e) => updateButtonColor('white', 'green')}>Green Theme</button>\n        </li>\n        <li className=\"nav-item my-70\">\n        <button className=\"btn btn-primary mx-2\" \n        style={{color: 'white', backgroundColor: 'red'}} onClick={(e) => updateButtonColor('white', 'red')}>Red Theme</button>\n        </li>\n        <li className=\"nav-item my-70\">\n        <button className=\"btn btn-primary mx-2\" \n        style={{color: '#fff', backgroundColor: '#0d6efd'}} onClick={(e) => updateButtonColor('#fff', '#0d6efd')}>Default</button>\n        </li>\n      </ul>        \n\n      <div className={`form-check form-switch text-${props.mode === 'light' ? 'dark': 'light'}`}>\n        <input className=\"form-check-input\" type=\"checkbox\" onChange={props.changeMode} id=\"flexSwitchCheckDefault\" />\n        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable {props.mode === 'light' ? 'dark': 'light'} mode</label>\n    </div>\n    {/* \n      <form className=\"d-flex\" >\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\" />\n        <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\n      </form>  */}\n    </div>\n  </div>\n</nav></>)\n}\n\nexport default Navbar","import React, {useState} from 'react'\n\n\nconst Textlabel = (props) => {\n    const [text, setText] = useState('')\n\n    const handleUpperCase = () => {\n        setText(text.toUpperCase())\n        if (text.length > 0) {\n        props.setAlert('Text Changed to upper case', 'success')}\n        else{\n            props.setAlert('Some text must be there', 'warning')\n        }\n    }\n\n    const handleLowerCase = () => {\n        setText(text.toLowerCase())\n        if (text.length > 0) {\n            props.setAlert('Text Changed to Lower case', 'success')}\n            else{\n                props.setAlert('Some text must be there', 'warning')\n            }\n    }\n\n    const handleOnChange = (event) => {\n        console.log(\"Form On changed\")\n        setText(event.target.value)\n    }\n\n\n    const checkEmptyString = (string) => {\n        \n        string = string.split(\" \")\n        \n        if (string.length > 0){\n            \n            function checkEmpty(element) {\n                return element !== '';\n              }\n              \n            const newArray = string.filter(checkEmpty)\n            return newArray.length\n            \n        }\n        return 0\n\n    }\n\n    return (<>\n    <div className=\"container\" style={{color: props.mode === 'dark' ? 'white': '#042743'}}>\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n            <textarea className=\"form-control\" \n            style={{backgroundColor: props.mode === 'dark' ? 'grey': 'white', \n        color: props.mode === 'dark' ? 'white': '#042743'}} \n            value={text} onChange={handleOnChange} id=\"myBox\" row=\"8\"></textarea>\n        </div>\n        <button className=\"btn btn-primary mx-2\" \n        style={props.buttonColor} onClick={handleUpperCase}>Convert To UpperCase</button>\n        <button className=\"btn btn-primary mx-2\" style={props.buttonColor} \n        onClick={handleLowerCase}>Conver To Lower case</button>\n    </div>\n\n    <div className=\"container my-3\" style={{color: props.mode === 'dark' ? 'white': '#042743'}}>\n        <h1>Your text Summary</h1>\n        <p>{checkEmptyString(text)} words {text.length} characters</p>\n        <h2>Preview</h2>\n        <p>{text.length>0 ? text: 'Enter The text on above text box'}</p>\n\n    </div>\n    </>\n    )\n}\n\n\nexport default Textlabel","import React from 'react'\n\n\nconst Alert = (props) => {\n\n    const captialiaze = (word) => {\n        const lowercase = word.toLowerCase()\n        return lowercase.charAt(0).toUpperCase() + lowercase.slice(1)\n    }\n\n    return(\n        props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\n            <strong>{captialiaze(props.alert.type)}</strong>: {props.alert.message}\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\n            </div>\n    )\n\n}\n\n\nexport default Alert","import React, { useState } from 'react'\n\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport Textlabel from \"./components/Textlabel\"\nimport Alert from \"./components/Alert\"\n// import About from \"./components/About\"\n// import {\n//   BrowserRouter as Router,\n//   Switch,\n//   Route\n// } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [mode, setMode] = useState('light')\n  const [alert, setAlert] = useState(null)\n  const [buttonColor, setButtonColor] = useState({color: '#fff', backgroundColor: '#0d6efd'})\n\n\n  const changeButtonColor = (color, bgColor) => {\n      setButtonColor({\n        color: color,\n        backgroundColor: bgColor\n      })\n      console.log('New Button Color', color, bgColor)\n  }\n\n  const setAAlert = (message, type) => {\n    setAlert({\n      message: message,\n      type: type\n    })\n    setTimeout(() => {\n        setAlert(null)\n    }, 1500)\n\n  }\n\n  const toggleMode = () => {\n      if (mode === 'light'){\n        setMode('dark')\n        document.body.style.backgroundColor = '#042743'\n        setAAlert('Dark mode enabled', 'success')\n      }\n      else{\n        setMode('light')\n        document.body.style.backgroundColor = 'white'\n        setAAlert('Light mode enabled', 'success')\n      }\n      console.log(\"Current Mode\", mode)\n  } \n\n  return (\n    <>\n    {/* <Router> */}\n    <Navbar title=\"TochO\" mode={mode} changeMode={toggleMode}\n     changeButtonColor={changeButtonColor}/>\n    <Alert alert={alert}/>\n    <div className=\"container my-3\">\n    {/* <Switch> */}\n          {/* <Route exact path=\"/about\"> */}\n            {/* <About /> */}\n          {/* </Route> */}\n          {/* <Route exact path=\"/\"> */}\n          <Textlabel heading=\"Text Analyzer\" mode={mode} setAlert={setAAlert} buttonColor={buttonColor}\n          setButtonColor={changeButtonColor}\n          />\n          {/* </Route> */}\n      {/* </Switch> */}\n    </div>\n    {/* </Router> */}\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}